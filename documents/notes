At encoding
	- 

Pass encoding
	-

Shift encoding
	- taken from "Multi-Agent Path Finding: A New Boolean Encoding"
	- some contrainst were changed
		- shift does not sum to 1, but at most 1 - we do not create all possible shifts, only usable shits. In the original paper, some shifts are forced to be 1 unnecessary causing a swapping conflict.
		- swapping conflict is still needed even for pebble motion as shift u->u may not exist (pebble motion is achieved by shift(v,u)->shift(u,u))
		- instead of At(a,v,t+1) -> OR At(a,u,t), we use At(a,v,t) -> OR At(a,u,t+1) since it was alreadz implemented for other encodings
		- cardinality constraints are translated directly to SAT. I.e. Sum x_i = 1 is transalted as {-x_i -x_j} over all pairs.